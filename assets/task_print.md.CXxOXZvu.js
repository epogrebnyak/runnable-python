import{_ as a,C as n,c as e,o as t,a2 as p,G as h}from"./chunks/framework.BsykBGXc.js";const y=JSON.parse('{"title":"Print shapes, lines, and a maze","description":"","frontmatter":{},"headers":[],"relativePath":"task/print.md","filePath":"task/print.md"}'),l={name:"task/print.md"};function r(k,s,o,d,c,E){const i=n("Editor");return t(),e("div",null,[s[0]||(s[0]=p(`<h1 id="print-shapes-lines-and-a-maze" tabindex="-1">Print shapes, lines, and a maze <a class="header-anchor" href="#print-shapes-lines-and-a-maze" aria-label="Permalink to &quot;Print shapes, lines, and a maze&quot;">​</a></h1><p>To keep us busy in primary school, the teachers gave us an assignment to draw an ornament line that separated our hard work in class and our homework in the paper notebooks.</p><p>Most of my peers were really creative with beautiful ornaments, while I was fascinated by the regularity of sequences like <code>/‾/_/‾/_/‾/_</code> which I was drawing in huge quantities in the paper notebook squares.</p><p>Use the code provided below to experiment with printing different lengths and patterns of ornaments. This code below uses <code>cycle</code> and <code>islice</code> functions from the <code>itertools</code> package. You do not have to learn these functions; instead, you can replicate existing code with simpler Python and create your own version of <code>make_ornament()</code>.</p><div class="language-python vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> itertools </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cycle, islice</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> make_ornament</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n_chars, pattern):</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    forever </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> cycle(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(pattern))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    segment </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> islice(forever, n_chars)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.join(segment)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> print_ornament</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(n_chars</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pattern</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/‾/_&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">):</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(make_ornament(n_chars, pattern))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">print_ornament(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">n_chars</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div>`,5)),h(i,{id:"i-draw"})])}const m=a(l,[["render",r]]);export{y as __pageData,m as default};
